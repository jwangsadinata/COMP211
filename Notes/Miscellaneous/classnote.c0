// only works up to numbers up to 10
string suffix1(int x) {

  string s;
  
  if (x == 1) {
    s = "st";
  }
  else if (x == 2) {
    s = "nd";
  }
  else  if (x == 3) {
    s = "rd";
  }
  else {
    s = "th";
  }

  return s;

}

//works for all numbers up to 100
/*string suffix2(int y) {

  string s;
  
  if (10 <= y && y <= 20) {
  	s = "th";
  }

  else {
  	int last_digit = y % 10;
  	if (last_digit == 1) {
    	s = "st";
  	}
  	else if (last_digit == 2) {
    	s = "nd";
  	}
  	else if (last_digit == 3) {
    	s = "rd";
    }
    else {
    	s = "th";
    }
  }

  return s;
} */

//work for all non-negative numbers

// we can also do something on top of suffix3 to enable for all numbers.
string suffix3 (int y) {

	int last_two_digits = y % 100;
	if (last_two_digits >= 10 && last_two_digits <= 20){
		return "th";
	}
	else {
		int last_digit = y % 10;
		return suffix1(last_digit);	
	}
}

// for example:
// format(1) == "1st"
// format(2) == "2nd"

string format(int x) {
	//string suf = ;
//string suf = we are using it only once, so do we have to make a function for it?
	return string_join(string_fromint(x),suffix3(x));

}


//return the number
// 1 + 2 + 3 + 4 + ... + x

int add_upto(int x) {
	int i = 0;
	int sum_so_far = 0;

	while (i <= x) {
		sum_so_far = sum_so_far + i;
		i++;
	}

	return sum_so_far;
}

//A is an array
// length is the number of things in A
int sum_array (int[] A, int length) {

	// A[0] + A[1] + A[2] + A[3]
	int sum_so_far = 0;
	int i = 0;
	while (i < length) {
		//do this for the last time when i is length - 1
		sum_so_far = sum_so_far + A[i];
		i = i + 1;
	}
	return sum_so_far;
}

